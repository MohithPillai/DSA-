int firstoccurences(int arr[], int n, int x){
    int low=0,high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]==x && (arr[mid]!=arr[mid-1] || mid==0)){
            return mid;
        }
        if(x>arr[mid]){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return -1;
}
int lastoccurences(int arr[], int n, int x){
    int low=0,high=n-1;
    while(low<=high){
        int mid=(low+high)/2;
        if(arr[mid]==x && (arr[mid]!=arr[mid+1] || mid==n-1)){
            return mid;
        }
        if(x>=arr[mid]){
            low=mid+1;
        }
        else{
            high=mid-1;
        }
    }
    return -1;
}
vector<int> find(int arr[], int n , int x )
{
    int first=firstoccurences(arr,n,x);
    int last=lastoccurences(arr,n,x);
    return {first,last};
}
